#BlueJ class context
comment0.target=IOConsole
comment1.params=
comment1.target=IOConsole()
comment10.params=prompt\ args
comment10.target=java.lang.Long\ getLongInput(java.lang.String,\ java.lang.Object[])
comment10.text=\r\n\ @param\ prompt\ \:\ text\ to\ display\ to\ user\r\n\ @param\ args\ \ \ \:\ optional\ arguments\ to\ send\ for\ string\ formatting\r\n\ @return\ user's\ input\ as\ long\r\n
comment2.params=inputStream\ outputStream
comment2.target=IOConsole(java.io.InputStream,\ java.io.OutputStream)
comment3.params=scanner\ printStream
comment3.target=IOConsole(java.util.Scanner,\ java.io.PrintStream)
comment4.params=val\ args
comment4.target=void\ print(java.lang.String,\ java.lang.Object[])
comment4.text=\r\n\ @param\ val\ \ \:\ text\ to\ display\ on\ console\r\n\ @param\ args\ \:\ optional\ arguments\ to\ send\ for\ string\ formatting\r\n
comment5.params=val\ args
comment5.target=void\ println(java.lang.String,\ java.lang.Object[])
comment5.text=\r\n\ @param\ val\ \ \:\ text\ to\ display\ on\ console\r\n\ @param\ args\ \:\ optional\ arguments\ to\ send\ for\ string\ formatting\r\n
comment6.params=prompt\ args
comment6.target=java.lang.String\ getStringInput(java.lang.String,\ java.lang.Object[])
comment6.text=\r\n\ @param\ prompt\ \:\ text\ to\ display\ to\ user\r\n\ @param\ args\ \ \ \:\ optional\ arguments\ to\ send\ for\ string\ formatting\r\n\ @return\ user's\ input\ as\ String\r\n
comment7.params=prompt\ args
comment7.target=java.lang.Integer\ getIntegerInput(java.lang.String,\ java.lang.Object[])
comment7.text=\r\n\ @param\ prompt\ \:\ text\ to\ display\ to\ user\r\n\ @param\ args\ \ \ \:\ optional\ arguments\ to\ send\ for\ string\ formatting\r\n\ @return\ user's\ input\ as\ integer\r\n
comment8.params=prompt\ args
comment8.target=java.lang.Double\ getDoubleInput(java.lang.String,\ java.lang.Object[])
comment8.text=\r\n\ @param\ prompt\ \:\ text\ to\ display\ to\ user\r\n\ @param\ args\ \ \ \:\ optional\ arguments\ to\ send\ for\ string\ formatting\r\n\ @return\ user's\ input\ as\ double\r\n
comment9.params=prompt\ args
comment9.target=java.lang.Float\ getFloatInput(java.lang.String,\ java.lang.Object[])
comment9.text=\r\n\ @param\ prompt\ \:\ text\ to\ display\ to\ user\r\n\ @param\ args\ \ \ \:\ optional\ arguments\ to\ send\ for\ string\ formatting\r\n\ @return\ user's\ input\ as\ float\r\n
numComments=11
